How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Using diff or FC highlights only the differences in the file, so it reduces the time it takes to find a problem.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    If you find that a change isn't working, you can quickly roll back to a former version.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    There is less of a chance of commiting with a small bug or typo becasue you have a chance to reveiw before commiting, commits will have logical changes when done manually.  Google Docs saves, preventing loss of work, but does not wait for a manual trigger to note a logical save point.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?
`
    Multiple files in a single commit work best for software projects that often contain multiple files.  
    Google docs is used for documents which are commonly individual document files.

How can you use the commands git log and git diff to view the history of files?

    git log will show you all the changes on a project.  Once you have the list of changes you can compare different commits with the git diff commitID_1 commitID_2

How might using version control make you more confident to make changes that
could break something?

    With version control there is a protected copy of the previous version of the project.  Version control provides tools to find mistakes, like log, diff, and the ability to check out old versions.

Now that you have your workspace set up, what do you want to try using Git for?

    My Nanodegree Projects